version: '3'

services:
  nginx-svc: # NGINX
    image: nginx:1.21.1 # image with S.O
    container_name: reverse-proxy-container
    environment:
      COMPOSE_PROJECT_NAME: 'ClanBot'
    volumes: # association of config file from the host to the container
      - ./nginx/nginx-conf.conf:/etc/nginx/nginx.conf 
    depends_on:
      - bot
      - mysql
      - python-api
    ports:
      - 5000:80 #Host:Container (Check nginx-conf.confg; container port is the same as what NGINX is listening to)
  bot:
    build:
      context: ./bot
      dockerfile: Dockerfile
      target: dev
    image: bot
    environment:
      - COMPOSE_PROJECT_NAME='ClanBot'
      - TOKEN=$TOKEN
      - CLIENT_ID=$CLIENT_ID
      - CLAN_TAG=$CLAN_TAG
      - GUILD_ID=$GUILD_ID
      - COC_TOKEN=$COC_TOKEN
    volumes:
      - ./bot:/bot
      - /bot/node_modules
    
  python-api:
    build:
      context: ../BotPython
      dockerfile: Dockerfile
      target: dev
    image: python-api
    restart: always
    depends_on:
      - mysql
    environment:
      - COMPOSE_PROJECT_NAME='ClanBot'
      - PYTHONUNBUFFERED=1
      - username=$username
      - password=$password
      - api_key=$api_key
      - base_url=$base_url
      - clan_tag=$clan_tag
      - spells_csv=$spells_csv
      - troops_csv=$troops_csv
      - heroes_csv=$heroes_csv
      - buildings_csv=$buildings_csv
      - texts_csv=$texts_csv
      - pets_csv=$pets_csv
      - db_ip=$db_ip
      - db_user=$db_user
      - db_pass=$db_pass
    volumes:
      - ../BotPython:/app
  mysql:
    image: mysql:5.7
    restart: always
    environment:
        MYSQL_DATABASE: 'sn3t'
        MYSQL_ROOT_PASSWORD: 'root'
        COMPOSE_PROJECT_NAME: 'ClanBot'
    ports:
      - '3306:3306'
    volumes:
      - ./my.cnf:/etc/my.cnf
      - data:/var/lib/mysql
    
volumes:
  data: