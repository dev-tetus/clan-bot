version: '3'

services:
  reverse-proxy: # NGINX
    image: nginx:1.21.1 # image with S.O
    container_name: reverse-proxy-container
    environment:
      COMPOSE_PROJECT_NAME: 'ClanBot'
    volumes: # association of config file from the host to the container
      - ./nginx/nginx-conf.conf:/etc/nginx/nginx.conf 
    depends_on:
      - api-gateway
      # - bot
      - mysql
      - python-api
    ports:
      - 5000:80 #Host:Container (Check nginx-conf.confg; container port is the same as what NGINX is listening to)
  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
      target: dev
    image: api-gateway
    environment:
      COMPOSE_PROJECT_NAME: 'ClanBot'
    volumes:
      - ./api-gateway:/api-gateway
      - /api-gateway/node_modules
  # bot:
  #   build:
  #     context: ./bot
  #     dockerfile: Dockerfile
  #     target: dev
  #   image: bot
  #   environment:
  #     COMPOSE_PROJECT_NAME: 'ClanBot'
  #   volumes:
  #     - ./bot:/bot
  #     - /bot/node_modules
  python-api:
    build:
      context: ../BotPython
      dockerfile: Dockerfile
    image: python-api
    restart: always
    depends_on:
      - mysql
    environment:
      COMPOSE_PROJECT_NAME: 'ClanBot'
      PYTHONUNBUFFERED: 1
    volumes:
      - ../BotPython:/app
  mysql:
    image: mysql:5.7
    restart: always
    environment:
        MYSQL_DATABASE: 'sn3t'
        MYSQL_ROOT_PASSWORD: 'root'
        COMPOSE_PROJECT_NAME: 'ClanBot'
    ports:
      - '3306:3306'
    volumes:
      - ./my.cnf:/etc/my.cnf
      - data:/var/lib/mysql
    
volumes:
  data: